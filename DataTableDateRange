<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DataTables with Date Range Filter and API Data</title>
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css">
    <!-- DataTables Buttons CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/1.6.5/css/buttons.dataTables.min.css">
    
    <!-- jQuery Library -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <!-- DataTables Library -->
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <!-- DataTables Buttons Library -->
    <script src="https://cdn.datatables.net/buttons/1.6.5/js/dataTables.buttons.min.js"></script>
    <!-- Buttons HTML5 Export -->
    <script src="https://cdn.datatables.net/buttons/1.6.5/js/buttons.html5.min.js"></script>
    <!-- JSZip for Excel Export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <!-- pdfmake for PDF Export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
</head>
<body>

<h2>DataTables with Date Range Filter and Large API Dataset</h2>

<!-- Date range inputs with bottom margin -->
<div style="margin-bottom: 15px;">
    <label for="min-date">Start Date:</label>
    <input type="date" id="min-date" name="min-date" style="margin-right: 10px;">
    <label for="max-date">End Date:</label>
    <input type="date" id="max-date" name="max-date" style="margin-left: 10px;">
</div>

<!-- DataTable -->
<table id="example" class="display">
    <thead>
        <tr>
            <th>Added Date</th>
            <th>Title</th>
            <th>Price</th>
            <th>Brand</th>
            <th>Category</th>
            <th>Stock</th>
        </tr>
    </thead>
</table>

<script>
$(document).ready(function() {
    var table = $('#example').DataTable({
        dom: 'lBfrtip', // 'l' for length menu dropdown
        lengthMenu: [ [10, 25, 50, 100, -1], [10, 25, 50, 100, "All"] ],
        buttons: [
            {
                extend: 'csvHtml5',
                text: 'Download CSV',
                exportOptions: {
                    modifier: {
                        search: 'applied',
                        order: 'applied'
                    }
                }
            },
            {
                extend: 'excelHtml5',
                text: 'Download Excel',
                exportOptions: {
                    modifier: {
                        search: 'applied',
                        order: 'applied'
                    }
                }
            },
            {
                extend: 'pdfHtml5',
                text: 'Download PDF',
                exportOptions: {
                    modifier: {
                        search: 'applied',
                        order: 'applied'
                    }
                }
            }
        ],
        columns: [
            { data: 'addedDate' },
            { data: 'title' },
            { data: 'price' },
            { data: 'brand' },
            { data: 'category' },
            { data: 'stock' }
        ]
    });

    // Fetch data from DummyJSON API in batches
    let currentPage = 1;
    const pageSize = 100;

    function loadData(page) {
        fetch(`https://dummyjson.com/products?limit=${pageSize}&skip=${(page - 1) * pageSize}`)
            .then(response => response.json())
            .then(result => {
                const products = result.products.map(product => {
                    return {
                        addedDate: new Date(new Date().setDate(new Date().getDate() - Math.floor(Math.random() * 730)))
                            .toISOString().split('T')[0],
                        title: product.title || "N/A",
                        price: product.price || "N/A",
                        brand: product.brand || "N/A",
                        category: product.category || "N/A",
                        stock: product.stock || "N/A"
                    };
                });
                
                table.rows.add(products).draw(false);

                if (page * pageSize < result.total) {
                    loadData(page + 1);
                }
            })
            .catch(error => console.error('Error fetching data:', error));
    }

    loadData(currentPage);

    // Custom filter function for date range
    $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
        var rowDate = new Date(data[0]);
        var minDate = new Date($('#min-date').val());
        var maxDate = new Date($('#max-date').val());

        if (
            (isNaN(minDate) || rowDate >= minDate) &&
            (isNaN(maxDate) || rowDate <= maxDate)
        ) {
            return true;
        }
        return false;
    });

    // Redraw table when date inputs change
    $('#min-date, #max-date').on('change', function() {
        table.draw();
    });
});
</script>

</body>
</html>
